{"version":3,"sources":["routes/index.js","components/Common/Loading.js","App.js","index.js","reducers/index.js","sagas/index.js","store/configureStore.prod.js","lib/MaterialTheme.js","containers/Root.prod.js","reducers/theme.js","reducers/base.js","store/configureStore.js","containers/Root.js"],"names":["history","Loading","react_default","a","createElement","style","display","justifyContent","alignItems","position","right","left","top","bottom","Component","Dashboard","loadable","Promise","all","__webpack_require__","e","then","bind","Object","defineProperty","LoadingComponent","Loading_Loading","modules","Home","routes","es","Route","component","exact","path","concat","process","App","Root_default","store","render","ReactDOM","react_hot_loader","key","Math","random","document","getElementById","loadComponents","catch","combineReducers","routing","routerReducer","theme","reducer","rootSaga","regenerator_default","wrap","_context","prev","next","stop","_marked","this","d","__webpack_exports__","configureStore_prod_history","createHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","finalCreateStore","compose","applyMiddleware","apply","createStore","reducers","run","configDefault","typography","useNextVariants","MaterialTheme","ligth","objectSpread","palette","type","primary","main","indigo","secondary","teal","dark","generateClassName","createGenerateClassName","sheetsManager","Map","sheetsRegistry","SheetsRegistry","muiTheme","createMuiTheme","Root","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","jssStyles","parentNode","removeChild","nextProps","_this$props","children","JssProvider_default","registry","MuiThemeProvider_default","react","CssBaseline_default","connect","_ref","updateTheme","themeReducer","creators","base","namespace","_ref$initialState","initialState","selectors","Duck","consts","statuses","types","action","_ref2","produce","draft","UPDATE","status","EDITING","payload","FETCH_PENDING","LOADING","FETCH_FULFILLED","READY","FETCH_FOR_PATH_FULFILLED","dataForPath","FETCH_FOR_PATH_PENDING","POST_PENDING","PUT_PENDING","PATCH_PENDING","DELETE_PENDING","SAVING","POST_FULFILLED","PUT_FULFILLED","PATCH_FULFILLED","SAVED","id","DELETE_FULFILLED","DELETED","FETCH_FOR_PATH_FAILURE","FETCH_FAILURE","PUT_FAILURE","POST_FAILURE","PATCH_FAILURE","DELETE_FAILURE","ERROR","error","FETCH_CANCEL","POST_CANCEL","PUT_CANCEL","DELETE_CANCEL","PATCH_CANCEL","CANCEL","RESET","NEW","_ref3","extend","UPDATE_THEME","localStorage","setItem","window","getItem","module","exports","require"],"mappings":"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","file":"static/js/main.780a31cd.chunk.js","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { ConnectedRouter } from 'react-router-redux'\nimport loadable from 'loadable-components'\n\nimport Loading from 'components/Common/Loading'\n\nconst Dashboard = loadable(() => import(/* webpackChunkName: \"Dashboard\" */ 'containers/Dashboard'), {\n  LoadingComponent: () => <Loading />,\n  modules         : [ 'containers/Dashboard' ]\n})\n\nconst Home = loadable(() => import(/* webpackChunkName: \"Home\" */ 'containers/Home'), {\n  LoadingComponent: () => <Loading />,\n  modules         : [ 'containers/Home' ]\n})\n\nexport default history => (\n  <ConnectedRouter history={history} >\n    <Dashboard history={history} >\n      <Route component={Home} exact path={`${process.env.PUBLIC_URL}/`} />\n    </Dashboard>\n    {/* <Route component={Dashboard} exact path={`${process.env.PUBLIC_URL}/`} /> */}\n  </ConnectedRouter>\n)\n","import React, { Component } from 'react'\n\nexport default class Loading extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          display       : 'flex',\n          justifyContent: 'center',\n          alignItems    : 'center',\n          position      : 'absolute',\n          right         : 0,\n          left          : 0,\n          top           : 0,\n          bottom        : 0\n        }}>\n        Cargando...\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport store, { history } from './store/configureStore'\nimport createRoutes from './routes'\nimport Root from './containers/Root'\n\nif(process.env.NODE_ENV === 'test') {\n  const { whyDidYouUpdate } = require('why-did-you-update')\n  whyDidYouUpdate(React)\n}\n\nconst routes = createRoutes(history)\n\nexport default () => <Root store={store}>{routes}</Root>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppContainer } from 'react-hot-loader'\nimport { loadComponents } from 'loadable-components'\n// import registerServiceWorker from './registerServiceWorker'\nimport App from './App'\n\nif(module.hot) module.hot.accept()\n\nconst render = Component => {\n  ReactDOM.render(\n    <AppContainer key={Math.random()}>\n      <Component />\n    </AppContainer>,\n    document.getElementById('root')\n  )\n}\n\nif(process.env.NODE_ENV === 'production')\n  loadComponents()\n    .then(() => {\n      render(App)\n    })\n    .catch(() => {\n      render(App)\n    })\nelse render(App)\n\n// Webpack Hot Module Replacement API\nif(module.hot)\n  module.hot.accept('./App', () => {\n    render(require('./App').default)\n  })\n\n// registerServiceWorker()\n","import { combineReducers } from 'redux'\nimport { routerReducer } from 'react-router-redux'\n\nimport theme from './theme'\n\nexport default combineReducers({\n  routing      : routerReducer,\n  [theme.store]: theme.reducer\n})\n","import { all } from 'redux-saga/effects'\n\nexport default function* rootSaga() {\n  yield all([])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'react-router-redux'\nimport createHistory from 'history/createBrowserHistory'\nimport createSagaMiddleware from 'redux-saga'\n\nimport reducers from 'reducers'\nimport rootSaga from 'sagas'\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [ sagaMiddleware, routerMiddleware(history) ]\n\nconst finalCreateStore = compose(applyMiddleware(...middleware))\nconst store = createStore(reducers, initialState, finalCreateStore)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import indigo from '@material-ui/core/colors/indigo'\r\nimport teal from '@material-ui/core/colors/teal'\r\n\r\nconst configDefault = {\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n}\r\n\r\nexport default {\r\n  ligth: {\r\n    ...configDefault,\r\n    palette: {\r\n      type   : 'light',\r\n      primary: {\r\n        main: indigo[500]\r\n      },\r\n      secondary: {\r\n        main: teal[500]\r\n      }\r\n    }\r\n  },\r\n  dark: {\r\n    ...configDefault,\r\n    palette: {\r\n      type   : 'dark',\r\n      primary: {\r\n        main: teal[500]\r\n      },\r\n      secondary: {\r\n        main: indigo[500]\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider, connect } from 'react-redux'\n\nimport { SheetsRegistry } from 'jss'\nimport JssProvider from 'react-jss/lib/JssProvider'\n\nimport createGenerateClassName from '@material-ui/core/styles/createGenerateClassName'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport MaterialTheme from 'lib/MaterialTheme'\nimport themeReducer from 'reducers/theme'\n\nconst generateClassName = createGenerateClassName()\nconst sheetsManager = new Map()\n\nexport const sheetsRegistry = new SheetsRegistry()\n\nlet muiTheme = createMuiTheme(MaterialTheme.ligth)\n\nclass Root extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    muiTheme = createMuiTheme(MaterialTheme[this.props.theme.style])\n  }\n\n  componentDidMount() {\n    const jssStyles = document.getElementById('jss-server-side')\n    if(jssStyles && jssStyles.parentNode) jssStyles.parentNode.removeChild(jssStyles)\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      theme: { style }\n    } = nextProps\n\n    if(this.props.theme.style !== style) {\n      muiTheme = createMuiTheme(MaterialTheme[style])\n\n      return true\n    } else {\n      return false\n    }\n  }\n\n  render() {\n    const { store, children } = this.props\n\n    // return <Provider store={store}>{children}</Provider>\n\n    return (\n      <JssProvider generateClassName={generateClassName} registry={sheetsRegistry}>\n        <MuiThemeProvider sheetsManager={sheetsManager} theme={muiTheme}>\n          <Provider store={store}>\n            <Fragment>\n              <CssBaseline />\n              {children}\n            </Fragment>\n          </Provider>\n        </MuiThemeProvider>\n      </JssProvider>\n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired\n}\n\nexport default connect(\n  ({ theme }) => ({\n    theme\n  }),\n  {\n    updateTheme: themeReducer.creators.updateTheme\n  }\n)(Root)\n\n","import base from './base'\r\nimport produce from 'immer'\r\n\r\nexport default base({\r\n  namespace   : 'boilerplate',\r\n  store       : 'theme',\r\n  initialState: {\r\n    style: 'ligth'\r\n  }\r\n}).extend({\r\n  types  : [ 'UPDATE_THEME' ],\r\n  reducer: (state, action, { types }) =>\r\n    produce(state, draft => {\r\n      switch (action.type) {\r\n        case types.UPDATE_THEME:\r\n          localStorage.setItem('style', action.theme)\r\n\r\n          return {\r\n            ...state,\r\n            style: action.theme\r\n          }\r\n        default:\r\n          draft.style = typeof window !== 'undefined' ? localStorage.getItem('style') || state.style : state.style\r\n\r\n          return\r\n      }\r\n    }),\r\n  creators: ({ types: { UPDATE_THEME } }) => ({\r\n    updateTheme: theme => ({ type: UPDATE_THEME, theme })\r\n  })\r\n})\r\n","import Duck from 'extensible-duck'\nimport produce from 'immer'\n\nexport default function createDuck({ namespace, store, initialState = {}, creators, selectors }) {\n  return new Duck({\n    namespace,\n    store,\n    consts: {\n      statuses: [ 'NEW', 'LOADING', 'READY', 'SAVING', 'SAVED', 'DELETED', 'ERROR', 'CANCEL', 'EDITING' ]\n    },\n    types: [\n      'REMOVE',\n      'UPDATE',\n      'FETCH',\n      'FETCH_PENDING',\n      'FETCH_FULFILLED',\n      'FETCH_FAILURE',\n      'FETCH_CANCEL',\n      'FETCH_FOR_PATH',\n      'FETCH_FOR_PATH_PENDING',\n      'FETCH_FOR_PATH_FULFILLED',\n      'FETCH_FOR_PATH_FAILURE',\n      'PUT',\n      'PUT_PENDING',\n      'PUT_FULFILLED',\n      'PUT_FAILURE',\n      'PUT_CANCEL',\n      'PUT',\n      'POST',\n      'POST_PENDING',\n      'POST_FULFILLED',\n      'POST_FAILURE',\n      'POST_CANCEL',\n      'DELETE',\n      'DELETE_PENDING',\n      'DELETE_FULFILLED',\n      'DELETE_FAILURE',\n      'DELETE_CANCEL',\n      'RESET',\n      'PATCH',\n      'PATCH_PENDING',\n      'PATCH_FULFILLED',\n      'PATCH_FAILURE',\n      'PATCH_CANCEL'\n    ],\n    reducer: (state, action, { types, statuses }) => {\n      return produce(state, draft => {\n        switch (action.type) {\n          case types.UPDATE:\n            if(draft.status !== statuses.EDITING) draft.status = statuses.EDITING\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.FETCH_PENDING:\n            draft.status = statuses.LOADING\n\n            return\n          case types.FETCH_FULFILLED:\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_FULFILLED:\n            if(action.dataForPath) draft.dataForPath = action.dataForPath\n            for (let key in action.payload) draft[key] = action.payload[key]\n            draft.status = statuses.READY\n\n            return\n          case types.FETCH_FOR_PATH_PENDING:\n          case types.POST_PENDING:\n          case types.PUT_PENDING:\n          case types.PATCH_PENDING:\n          case types.DELETE_PENDING:\n            draft.status = statuses.SAVING\n\n            return\n          case types.POST_FULFILLED:\n          case types.PUT_FULFILLED:\n          case types.PATCH_FULFILLED:\n            draft.status = statuses.SAVED\n            if(action.id) draft.id = action.id\n            for (let key in action.payload) draft[key] = action.payload[key]\n\n            return\n          case types.DELETE_FULFILLED:\n            draft.status = statuses.DELETED\n\n            return\n          case types.FETCH_FOR_PATH_FAILURE:\n          case types.FETCH_FAILURE:\n          case types.PUT_FAILURE:\n          case types.POST_FAILURE:\n          case types.PATCH_FAILURE:\n          case types.DELETE_FAILURE:\n            draft.status = statuses.ERROR\n            draft.error = action.error\n\n            return\n          case types.FETCH_CANCEL:\n          case types.POST_CANCEL:\n          case types.PUT_CANCEL:\n          case types.DELETE_CANCEL:\n          case types.PATCH_CANCEL:\n            draft.status = statuses.CANCEL\n\n            return\n          case types.RESET:\n            return {\n              ...initialState,\n              status: statuses.NEW,\n              error : null\n            }\n          default:\n            return\n        }\n      })\n    },\n    selectors,\n    creators,\n    initialState: ({ statuses }) => ({\n      ...initialState,\n      status: statuses.NEW,\n      error : null\n    })\n  })\n}\n","module.exports = process.env.NODE_ENV === 'production' ? require('./configureStore.prod') : require('./configureStore.dev')\n","module.exports = process.env.NODE_ENV === 'production' || process.env.PROD ? require('./Root.prod') : require('./Root.dev')\n"],"sourceRoot":""}